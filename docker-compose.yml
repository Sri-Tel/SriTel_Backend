services:
  config-server:
    build: ./Services/config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - sritel-network

  discovery-server:
    build:
      context: ./Services/discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    depends_on:
      - config-server
    ports:
      - "8761:8761"
    entrypoint: /home/app/sritel/entry.sh
    networks:
      - sritel-network

  api-gateway:
    build: 
      context: ./Services/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    entrypoint: /home/app/sritel/entry.sh
    depends_on:
      - config-server
      - discovery-server
    ports:
      - "8222:8222"
    networks:
      - sritel-network

  sritel-service:
    build:
      context: ./Services/sritel-services
      dockerfile: Dockerfile
    container_name: sritel-service
    depends_on:
      - config-server
      - discovery-server
    entrypoint: /home/app/sritel/entry.sh
    ports:
      - "9010:9010"
    networks:
      - sritel-network


  billing-service:
    build:
      context: ./Services/billing
      dockerfile: Dockerfile
    container_name: billing-service
    depends_on:
      - config-server
      - discovery-server
    entrypoint: /home/app/sritel/entry.sh
    ports:
      - "9000:9000"
    networks:
      - sritel-network

  customer-service:
    build:
      context: ./Services/customer
      dockerfile: Dockerfile
    container_name: customer-service
    depends_on:
      - config-server
      - discovery-server
    entrypoint: /home/app/sritel/entry.sh
    ports:
      - "8090:8090"
    networks:
      - sritel-network

  payment-service:
    build:
      context: ./Services/payment
      dockerfile: Dockerfile
    container_name: payment-service
    depends_on:
      - config-server
      - discovery-server
    entrypoint: /home/app/sritel/entry.sh
    ports:
      - "8099:8099"
    networks:
      - sritel-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  postgres:
    container_name: re_pg_sql
    image: postgres
    environment:
      - POSTGRES_USER=sritel
      - POSTGRES_DB=keycloak
      - POSTGRES_PASSWORD=sritel
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data  
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start --proxy=edge
    container_name: keycloak
    environment:
      KC_HOSTNAME: keycloak.raviyax.site
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false  # Disabled to avoid conflict with Caddy's SSL handling
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: sritel
      KC_DB_PASSWORD: sritel
      KEYCLOAK_ADMIN: sritel
      KEYCLOAK_ADMIN_PASSWORD: sritel
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - app-network


networks:
  sritel-network:
    driver: bridge

